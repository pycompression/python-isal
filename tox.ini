[tox]
# Running plain tox will run the default environment (testenv) with the default
# python3 interpreter of the user.
envlist=testenv

[testenv]
deps=pytest
     coverage
passenv=
    PYTHON_ISAL_LINK_DYNAMIC
commands =
    # Create HTML coverage report for humans and xml coverage report for external services.
    coverage run --branch --source=isal -m py.test tests
    # Ignore errors during report generation. Pypy does not generate proper coverage reports.
    coverage html -i
    coverage xml -i

[testenv:coverage]
# Separate test environment for cython coverage.
deps=coverage[toml]
     cython
     pytest
passenv=
    PYTHON_ISAL_LINK_DYNAMIC
setenv=
    CYTHON_COVERAGE=true
commands =
    # Create HTML coverage report for humans and xml coverage report for external services.
    coverage run --source=isal -m py.test tests
    coverage html
    coverage xml

[testenv:compliance]
deps=pytest
commands=
    pytest -v tests/test_zlib_compliance.py tests/test_gzip_compliance.py

[testenv:compatibility]
deps=pytest
commands=
    pytest tests/test_isal.py

[testenv:lint]
deps=flake8
     flake8-import-order
     mypy
     pytest
skip_install=True
commands =
    flake8 src tests setup.py benchmark.py
    mypy src/ tests

[testenv:twine_check]
deps=build
     twine
skip_install=True
commands =
    python -m build
    twine check dist/*

# Documentation should build on python version 3
[testenv:docs]
deps=-r requirements-docs.txt
allowlist_externals=bash
                    mkdir
                    rm
commands=
    python --version
    # PLACEHOLDER: create _static folder, since we do not have static files in
    # our project yet
    mkdir -p docs/_static
    # Remove docs/_build so all documentation has to be build again
    # This is necessary when using --keep-going on sphinx-build
    rm -rf docs/_build
    # Test if documentation can be build without errors and warnings
    # -a rebuilds everything. -W turns warnings into errors.
    # --keep-going makes sure we see al the errors that are there in one go.
    sphinx-build -a -W -n --keep-going docs docs/_build

[testenv:benchmark-all]
deps=
commands=
    python ./benchmark.py --all

[testenv:benchmark-functions]
deps=
commands=
    python ./benchmark.py --functions

[testenv:benchmark-gzip]
deps=
commands=
    python ./benchmark.py --gzip

[testenv:benchmark-checksums]
deps=
commands=
    python ./benchmark.py --checksums
